{"version":3,"sources":["logo.svg","game.js","App.js","reportWebVitals.js","index.js"],"names":["getRandom","Math","floor","random","App","useState","secret","setSecret","guesses","setGuesses","results","setResults","text","setText","message","setMessage","guess","length","k","charAt","isNaN","parseInt","valid","result","bulls","cows","i","getResult","concat","reset","className","type","value","onClick","onChange","ev","target","onKeyPress","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7fac23a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export function getRandom() {\n  var d1 = Math.floor(Math.random() * 10);\n  var d2 = Math.floor(Math.random() * 10);\n  var d3 = Math.floor(Math.random() * 10);\n  var d4 = Math.floor(Math.random() * 10);\n\n  return \"\" + d1 + d2 + d3 + d4 + \"\";\n}\n\nexport function getResult(guess, secret) {\n  var bulls = 0;\n  var cows = 0;\n\n  //check for bulls\n  for(var k=0; k<secret.length; k++) {\n    if(guess.charAt(k)==secret.charAt(k)) {\n      bulls++;\n    }\n    //check for cows\n    else {\n      for(var i=0; i<secret.length; i++) {\n        if(guess.charAt(k)==secret.charAt(i)) {\n          cows++;\n        }\n      }\n    }\n  }\n\n  return \"Bulls: \" + bulls + \" Cows: \" + cows;\n}\n\n//checks for valid input\nexport function valid(guess) {\n  if(guess.length !== 4) {\n    return false;\n  }\n  for(var k=0; k<guess.length-1; k++) {\n    if(guess.charAt(k)==guess.charAt(k+1)) {\n      return false;\n    }\n  }\n\n  return !(isNaN(parseInt(guess)));\n}\n","import {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {getRandom, getResult, valid} from './game.js';\n\nfunction App() {\n  const [secret, setSecret] = useState(getRandom());\n  const [guesses, setGuesses] = useState([]);\n  const [results, setResults] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  function changeText(ev) {\n    setText(ev.target.value);\n  }\n\n  function guess() {\n    if(text==secret) {\n      win();\n    }\n    else if(valid(text)) {\n      let result = getResult(text, secret);\n      setGuesses(guesses.concat(text));\n      setResults(results.concat(result));\n      setText(\"\");\n      setMessage(\"\");\n      if(guesses.length >= 7) {\n        lose();\n      }\n    }\n    else {\n      setMessage(\"Invalid Entry. Try again.\");\n      setText(\"\");\n    }\n  }\n\n  function win() {\n    setMessage(\"You Win!\");\n  }\n\n  function lose() {\n    setMessage(\"You Lose! Press Reset button to try again.\");\n  }\n\n  function reset() {\n    setGuesses([]);\n    setResults([]);\n    setText(\"\");\n    setMessage(\"\");\n    setSecret(getRandom());\n  }\n\n  function enter(ev) {\n    if (ev.key == \"Enter\") {\n      guess();\n    }\n  }\n\n  if((message==\"You Win!\") ||\n  (message==\"You Lose! Press Reset button to try again.\")) {\n    return (\n      <div className=\"App\">\n        <h1>Bulls and Cows game!</h1>\n        <h2>{message}</h2>\n        <input type=\"text\" value=\"\"/>\n        <p>\n          <button>Guess</button>\n          <button onClick={reset}>Reset</button>\n        </p>\n        <p>\n          <table>\n          <tr>\n            <th>Guesses</th>\n            <th>Results</th>\n          </tr>\n          <tr>\n            <td>{guesses[0]}</td>\n            <td>{results[0]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[1]}</td>\n            <td>{results[1]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[2]}</td>\n            <td>{results[2]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[3]}</td>\n            <td>{results[3]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[4]}</td>\n            <td>{results[4]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[5]}</td>\n            <td>{results[5]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[6]}</td>\n            <td>{results[6]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[7]}</td>\n            <td>{results[7]}</td>\n          </tr>\n        </table>\n      </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Bulls and Cows game!</h1>\n      <h2>{message}</h2>\n      <input type=\"text\" value={text} onChange={changeText}\n      onKeyPress={enter}/>\n      <p>\n        <button onClick={guess}>Guess</button>\n        <button onClick={reset}>Reset</button>\n      </p>\n      <p>\n        <table>\n          <tr>\n            <th>Guesses</th>\n            <th>Results</th>\n          </tr>\n          <tr>\n            <td>{guesses[0]}</td>\n            <td>{results[0]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[1]}</td>\n            <td>{results[1]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[2]}</td>\n            <td>{results[2]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[3]}</td>\n            <td>{results[3]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[4]}</td>\n            <td>{results[4]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[5]}</td>\n            <td>{results[5]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[6]}</td>\n            <td>{results[6]}</td>\n          </tr>\n          <tr>\n            <td>{guesses[7]}</td>\n            <td>{results[7]}</td>\n          </tr>\n        </table>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}